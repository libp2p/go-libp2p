// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.2
// source: p2p/security/insecure/pb/plaintext.proto

package pb

import (
	pb "github.com/libp2p/go-libp2p/core/crypto/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Exchange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Pubkey        *pb.PublicKey          `protobuf:"bytes,2,opt,name=pubkey" json:"pubkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Exchange) Reset() {
	*x = Exchange{}
	mi := &file_p2p_security_insecure_pb_plaintext_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exchange) ProtoMessage() {}

func (x *Exchange) ProtoReflect() protoreflect.Message {
	mi := &file_p2p_security_insecure_pb_plaintext_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exchange.ProtoReflect.Descriptor instead.
func (*Exchange) Descriptor() ([]byte, []int) {
	return file_p2p_security_insecure_pb_plaintext_proto_rawDescGZIP(), []int{0}
}

func (x *Exchange) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Exchange) GetPubkey() *pb.PublicKey {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

var File_p2p_security_insecure_pb_plaintext_proto protoreflect.FileDescriptor

const file_p2p_security_insecure_pb_plaintext_proto_rawDesc = "" +
	"\n" +
	"(p2p/security/insecure/pb/plaintext.proto\x12\fplaintext.pb\x1a\x1bcore/crypto/pb/crypto.proto\"H\n" +
	"\bExchange\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12,\n" +
	"\x06pubkey\x18\x02 \x01(\v2\x14.crypto.pb.PublicKeyR\x06pubkeyB6Z4github.com/libp2p/go-libp2p/p2p/security/insecure/pb"

var (
	file_p2p_security_insecure_pb_plaintext_proto_rawDescOnce sync.Once
	file_p2p_security_insecure_pb_plaintext_proto_rawDescData []byte
)

func file_p2p_security_insecure_pb_plaintext_proto_rawDescGZIP() []byte {
	file_p2p_security_insecure_pb_plaintext_proto_rawDescOnce.Do(func() {
		file_p2p_security_insecure_pb_plaintext_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_p2p_security_insecure_pb_plaintext_proto_rawDesc), len(file_p2p_security_insecure_pb_plaintext_proto_rawDesc)))
	})
	return file_p2p_security_insecure_pb_plaintext_proto_rawDescData
}

var file_p2p_security_insecure_pb_plaintext_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_p2p_security_insecure_pb_plaintext_proto_goTypes = []any{
	(*Exchange)(nil),     // 0: plaintext.pb.Exchange
	(*pb.PublicKey)(nil), // 1: crypto.pb.PublicKey
}
var file_p2p_security_insecure_pb_plaintext_proto_depIdxs = []int32{
	1, // 0: plaintext.pb.Exchange.pubkey:type_name -> crypto.pb.PublicKey
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_p2p_security_insecure_pb_plaintext_proto_init() }
func file_p2p_security_insecure_pb_plaintext_proto_init() {
	if File_p2p_security_insecure_pb_plaintext_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_p2p_security_insecure_pb_plaintext_proto_rawDesc), len(file_p2p_security_insecure_pb_plaintext_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_p2p_security_insecure_pb_plaintext_proto_goTypes,
		DependencyIndexes: file_p2p_security_insecure_pb_plaintext_proto_depIdxs,
		MessageInfos:      file_p2p_security_insecure_pb_plaintext_proto_msgTypes,
	}.Build()
	File_p2p_security_insecure_pb_plaintext_proto = out.File
	file_p2p_security_insecure_pb_plaintext_proto_goTypes = nil
	file_p2p_security_insecure_pb_plaintext_proto_depIdxs = nil
}
